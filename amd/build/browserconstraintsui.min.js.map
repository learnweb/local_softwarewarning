{"version":3,"file":"browserconstraintsui.min.js","sources":["../src/browserconstraintsui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manages the Admin browser constraints ui\n *\n * @module     local_softwarewarning/browserconstraintsui\n * @copyright  2022 Justus Dieckmann WWU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\n\nlet anchor, configroot, bannertypes;\n\n/**\n * Init\n * @param {object} _config\n * @param {array} _bannertypes\n */\nexport async function init(_config, _bannertypes) {\n    bannertypes = _bannertypes;\n\n    anchor = document.getElementById('local_softwarewarning-anchor');\n    const root = await createDOMFromConfig(_config);\n    configroot = root.querySelector('#local_softwarewarning-config');\n    const savebtn = root.querySelector('#local_softwarewarning-save');\n\n    savebtn.onclick = () => {\n        const configjson = JSON.stringify(getConfigFromDOM());\n        const form = document.createElement('form');\n        form.method = 'post';\n        form.action = '';\n        let input = document.createElement('input');\n        input.name = 'sesskey';\n        input.value = M.cfg.sesskey;\n        form.appendChild(input);\n        input = document.createElement('input');\n        input.name = 'json';\n        input.value = configjson;\n        form.appendChild(input);\n        document.body.appendChild(form);\n        form.submit();\n    };\n\n    const selectEls = configroot.querySelectorAll('*[data-sw-selected]');\n    for (let selectEl of selectEls) {\n        selectEl.value = selectEl.getAttribute('data-sw-selected');\n    }\n\n    configroot.oninput = async(e) => {\n        const target = e.target;\n        const type = target.getAttribute('data-sw-type');\n        const browserelement = getAncestorWithClass(target, 'sw-browser');\n        switch (type) {\n            case 'name': {\n                const isEmpty = target.value.length === 0;\n                browserelement.setAttribute('data-sw-empty', isEmpty);\n                if (!isEmpty && browserelement.nextElementSibling === null) {\n                    await appendEmptyBrowserElement();\n                }\n                break;\n            }\n            case 'issinglerule':\n                browserelement.setAttribute('data-sw-singlerule', target.checked);\n                break;\n            case 'multi-version': {\n                const misEmpty = target.value.length === 0;\n                const versionelement = getAncestorWithClass(target, 'sw-version');\n                versionelement.setAttribute('data-sw-empty', misEmpty);\n                if (!misEmpty && versionelement.nextElementSibling === null) {\n                    await appendEmptyVersionElement(versionelement.parentElement);\n                }\n                break;\n            }\n        }\n    };\n\n    configroot.onclick = async(e) => {\n        const versionAncestor = getAncestorWithClass(e.target, 'sw-delete-version');\n        if (versionAncestor !== null) {\n            const swverion = getAncestorWithClass(versionAncestor, 'sw-version');\n            const parent = swverion.parentElement;\n            swverion.remove();\n            if (parent.lastElementChild.getAttribute('data-sw-empty') !== 'true') {\n                await appendEmptyVersionElement(parent);\n            }\n        } else {\n            const browserAncestor = getAncestorWithClass(e.target, 'sw-delete-browser');\n            if (browserAncestor !== null) {\n                getAncestorWithClass(browserAncestor, 'sw-browser').remove();\n                if (configroot.lastElementChild.getAttribute('data-sw-empty') !== 'true') {\n                    await appendEmptyBrowserElement();\n                }\n            }\n        }\n    };\n\n    anchor.appendChild(root);\n}\n\n/**\n * Gets the nearest ancestor element with class.\n *\n * @param {HTMLElement} node\n * @param {string} theclass\n * @return {HTMLElement} the ancestor\n */\nfunction getAncestorWithClass(node, theclass) {\n    while (!node.classList.contains(theclass)) {\n        if (node.parentElement === null) {\n            return null;\n        }\n        node = node.parentElement;\n    }\n    return node;\n}\n\n/**\n * @param {{string: {any: string}}} config the config in format {browsername: {'all'|version: bannername}}\n * @return {HTMLElement} The DOM for Config.\n */\nasync function createDOMFromConfig(config) {\n    const context = transformConfig(config);\n    return await renderTemplate('local_softwarewarning/browserconfig', context);\n}\n\n/**\n * @param {Object} config\n * @return {Object} Context for local_softwarewarning/browserconfig template.\n */\nfunction transformConfig(config) {\n    const browsers = [];\n    for (let browser in config) {\n        const versions = config[browser];\n        const versionsArr = [];\n        for (let version in versions) {\n            if (version === 'all') {\n                continue;\n            }\n\n            versionsArr.push({\n                version: version,\n                banner: versions[version]\n            });\n        }\n        versionsArr.push({\n            version: \"\",\n            banner: \"unrecognized\"\n        });\n        browsers.push({\n            browsername: browser,\n            issinglerule: !!versions.all,\n            singlebanner: versions.all,\n            multirulebanners: versionsArr\n        });\n    }\n    browsers.push({\n        browsername: '',\n        issinglerule: false,\n        singlebanner: \"unrecognized\",\n        multirulebanners: [{\n            version: \"\",\n            banner: \"unrecognized\"\n        }]\n    });\n    return {\n        \"banners\": bannertypes,\n        \"browsers\": browsers\n    };\n}\n\n/**\n * Renders the specified template with context into a HTML Element.\n * @param {string} template\n * @param {Object} context\n * @return {HTMLElement}\n */\nasync function renderTemplate(template, context) {\n    const html = await Templates.render(template, context);\n    const div = document.createElement('div');\n    div.innerHTML = html;\n    return div.firstElementChild;\n}\n\n/**\n *\n */\nasync function appendEmptyBrowserElement() {\n    const node = await renderTemplate('local_softwarewarning/browserconfig_browser', {\n        \"banners\": bannertypes,\n        \"browsername\": \"\",\n        \"issinglerule\": false,\n        \"singlebanner\": \"unrecognized\",\n        \"multirulebanners\": [\n            {\n                \"version\": \"\",\n                \"banner\": \"unrecognized\"\n            }\n        ]\n    });\n    configroot.appendChild(node);\n}\n\n/**\n * Appends a empty version element to the specified browserconfig multirule-anchor.\n * @param {HTMLElement} parentElement\n */\nasync function appendEmptyVersionElement(parentElement) {\n    const node = await renderTemplate('local_softwarewarning/browserconfig_version', {\n        \"banners\": bannertypes,\n        \"version\": \"\",\n        \"banner\": \"unrecognized\"\n    });\n    parentElement.appendChild(node);\n}\n\n/**\n * Converts the user entered settings into a json config.\n * @return {Object} the Config\n */\nfunction getConfigFromDOM() {\n    const config = {};\n    for (let browserdom of configroot.children) {\n        const browser = browserdom.querySelector('input[data-sw-type=\"name\"]').value;\n        if (browser.length === 0) {\n            continue;\n        }\n\n        const issinglerule = browserdom.getAttribute('data-sw-singlerule') === 'true';\n        let versions = {};\n        if (issinglerule) {\n            versions.all = browserdom.querySelector('select[data-sw-type=\"singlerule\"]').value;\n        } else {\n            const anchor = browserdom.querySelector('.sw-multirule-anchor');\n            for (let versiondom of anchor.children) {\n                const version = parseInt(versiondom.querySelector('input[data-sw-type=\"multi-version\"]').value);\n                if (isNaN(version)) {\n                    continue;\n                }\n                versions[version] = versiondom.querySelector('select[data-sw-type=\"multi-banner\"]').value;\n            }\n        }\n        config[browser] = versions;\n    }\n    return config;\n}"],"names":["anchor","configroot","bannertypes","getAncestorWithClass","node","theclass","classList","contains","parentElement","renderTemplate","template","context","html","Templates","render","div","document","createElement","innerHTML","firstElementChild","appendEmptyBrowserElement","appendChild","appendEmptyVersionElement","_config","_bannertypes","getElementById","root","config","browsers","browser","versions","versionsArr","version","push","banner","browsername","issinglerule","all","singlebanner","multirulebanners","transformConfig","createDOMFromConfig","querySelector","onclick","configjson","JSON","stringify","browserdom","children","value","length","getAttribute","versiondom","parseInt","isNaN","getConfigFromDOM","form","method","action","input","name","M","cfg","sesskey","body","submit","selectEls","querySelectorAll","selectEl","oninput","async","target","e","type","browserelement","isEmpty","setAttribute","nextElementSibling","checked","misEmpty","versionelement","versionAncestor","swverion","parent","remove","lastElementChild","browserAncestor"],"mappings":"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"}